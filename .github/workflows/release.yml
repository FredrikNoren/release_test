name: Release

on:
  push:
    tags: [v*]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create-gh-release.outputs.computed-prefix }}${{ steps.create-gh-release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - id: create-gh-release
        uses: taiki-e/create-gh-release-action@v1
        with:
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build-app:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            exe_name: release_test
          - os: macos-latest
            target: aarch64-apple-darwin
            exe_name: release_test
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            exe_name: release_test.exe
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Install aarch64-apple-darwin
        if: matrix.target == 'aarch64-apple-darwin'
        run: rustup target add aarch64-apple-darwin
      - uses: dtolnay/rust-toolchain@stable
      # We don't do caching here because we only have 10gb and they'll be occupied by normal builds all the time anyway
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload
        run: gh release upload ${{ needs.create-release.outputs.tag }} target/${{ matrix.target }}/release/${{ matrix.exe_name }}

  publish-release:
    needs: [create-release, build-app]
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: mark release as non-draft
        run: gh release edit ${{ needs.create-release.outputs.tag }} --draft=false
